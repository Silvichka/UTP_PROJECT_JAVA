/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class Board_CheckListener */

#ifndef _Included_Board_CheckListener
#define _Included_Board_CheckListener
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     Board_CheckListener
 * Method:    isValidPieceToSelect
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_Board_00024CheckListener_isValidPieceToSelect
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Board_CheckListener
 * Method:    placingPieces
 * Signature: ()[[C
 */
JNIEXPORT jobjectArray JNICALL Java_Board_00024CheckListener_placingPieces
  (JNIEnv *, jclass);

/*
 * Class:     Board_CheckListener
 * Method:    move
 * Signature: (IIIIZ)V
 */
JNIEXPORT void JNICALL Java_Board_00024CheckListener_move
  (JNIEnv *, jobject, jint, jint, jint, jint, jboolean);

/*
 * Class:     Board_CheckListener
 * Method:    removeCaptured
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_Board_00024CheckListener_removeCaptured
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Board_CheckListener
 * Method:    predictedMoves
 * Signature: (II)Ljava/util/HashMap;
 */
JNIEXPORT jobject JNICALL Java_Board_00024CheckListener_predictedMoves
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Board_CheckListener
 * Method:    captureRule
 * Signature: (II)[I
 */
JNIEXPORT jintArray JNICALL Java_Board_00024CheckListener_captureRule
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Board_CheckListener
 * Method:    restart
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Board_00024CheckListener_restart
  (JNIEnv *, jclass);

/*
 * Class:     Board_CheckListener
 * Method:    displaying
 * Signature: ()[[C
 */
JNIEXPORT jobjectArray JNICALL Java_Board_00024CheckListener_displaying
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
